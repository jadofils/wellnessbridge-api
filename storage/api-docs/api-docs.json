{
    "openapi": "3.0.0",
    "info": {
        "title": "WellnessBridge API For 8 Tables",
        "description": "API documentation for managing health workers",
        "version": "1.0"
    },
    "paths": {
        "/api/v1/birth-properties": {
            "get": {
                "tags": [
                    "Birth Properties"
                ],
                "summary": "Get paginated list of birth properties",
                "description": "Retrieve birth properties with pagination.",
                "operationId": "4e2d75b876698aa624cfeb26bf03f80c",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Birth Properties"
                ],
                "summary": "Create a new birth property",
                "description": "Store a newly created birth property.",
                "operationId": "1b5a71e9e2598cb0228fd16a8dedd783",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "childID": {
                                        "type": "integer",
                                        "example": 141
                                    },
                                    "motherAge": {
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "fatherAge": {
                                        "type": "integer",
                                        "example": 32
                                    },
                                    "numberOfChildren": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "birthType": {
                                        "type": "string",
                                        "example": "Natural"
                                    },
                                    "birthWeight": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 3.2
                                    },
                                    "childCondition": {
                                        "type": "string",
                                        "example": "Healthy"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Birth property created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/birth-properties/{bID}": {
            "get": {
                "tags": [
                    "Birth Properties"
                ],
                "summary": "Get a birth property by ID",
                "description": "Retrieve a specific birth property.",
                "operationId": "bea4eba0a32b261168cc54dd718bc3cd",
                "parameters": [
                    {
                        "name": "bID",
                        "in": "path",
                        "description": "Birth Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Birth property not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Birth Properties"
                ],
                "summary": "Update an existing birth property",
                "description": "Modify the details of a birth property.",
                "operationId": "4cb7bc6a418a9892f71eda7cfe5cc4f9",
                "parameters": [
                    {
                        "name": "bID",
                        "in": "path",
                        "description": "Birth Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "motherAge": {
                                        "type": "integer",
                                        "example": 32
                                    },
                                    "fatherAge": {
                                        "type": "integer",
                                        "example": 34
                                    },
                                    "numberOfChildren": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "birthType": {
                                        "type": "string",
                                        "example": "C-section"
                                    },
                                    "birthWeight": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 3.5
                                    },
                                    "childCondition": {
                                        "type": "string",
                                        "example": "Premature"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Birth property updated successfully"
                    },
                    "404": {
                        "description": "Birth property not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Birth Properties"
                ],
                "summary": "Delete a birth property",
                "description": "Remove a birth property record.",
                "operationId": "339473046299b65b18a6dc810b3ae03b",
                "parameters": [
                    {
                        "name": "bID",
                        "in": "path",
                        "description": "Birth Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Birth property deleted successfully"
                    },
                    "404": {
                        "description": "Birth property not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/birth-properties/by-child/{childID}": {
            "get": {
                "tags": [
                    "Birth Properties"
                ],
                "summary": "Get birth property by child ID",
                "description": "Retrieve a birth property associated with a specific child.",
                "operationId": "f1b7b9d073d9ee123bf6420e38c586e5",
                "parameters": [
                    {
                        "name": "childID",
                        "in": "path",
                        "description": "Child ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Birth property not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Birth Properties"
                ],
                "summary": "Update birth property by child ID",
                "description": "Modify the details of a birth property associated with a specific child.",
                "operationId": "cfe71aee759ec1209540dec506d702a4",
                "parameters": [
                    {
                        "name": "childID",
                        "in": "path",
                        "description": "Child ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "motherAge": {
                                        "type": "integer",
                                        "example": 32
                                    },
                                    "fatherAge": {
                                        "type": "integer",
                                        "example": 34
                                    },
                                    "numberOfChildren": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "birthType": {
                                        "type": "string",
                                        "example": "C-section"
                                    },
                                    "birthWeight": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 3.5
                                    },
                                    "childCondition": {
                                        "type": "string",
                                        "example": "Premature"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Birth property updated successfully"
                    },
                    "404": {
                        "description": "Birth property not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Birth Properties"
                ],
                "summary": "Delete birth property by child ID",
                "description": "Delete a birth property associated with a specific child.",
                "operationId": "67b8e1703a89fa765024ba0408c78142",
                "parameters": [
                    {
                        "name": "childID",
                        "in": "path",
                        "description": "Child ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Birth property deleted successfully"
                    },
                    "404": {
                        "description": "Birth property not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/cadres": {
            "get": {
                "tags": [
                    "Cadres"
                ],
                "summary": "Get all cadres",
                "description": "Display a listing of all cadres.",
                "operationId": "5743e7ab51fabcb4726122b476e84a7e",
                "responses": {
                    "200": {
                        "description": "Successful response"
                    }
                }
            },
            "post": {
                "tags": [
                    "Cadres"
                ],
                "summary": "Create a new cadre",
                "description": "Store a newly created cadre.",
                "operationId": "ce269336a2b4fb888948339349e00f88",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "qualification"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "qualification": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Cadre created successfully"
                    },
                    "400": {
                        "description": "ValcadIDation error"
                    }
                }
            }
        },
        "/api/v1/cadres/page/{page}": {
            "get": {
                "tags": [
                    "Cadres"
                ],
                "summary": "Get paginated list of cadres",
                "description": "Paginate cadres with a page parameter in the URL.",
                "operationId": "a9e52cf244aaf5946b31d7316bba90ca",
                "parameters": [
                    {
                        "name": "page",
                        "in": "path",
                        "description": "Page number",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated cadres retrieved"
                    }
                }
            }
        },
        "/api/v1/cadres/{cadre}": {
            "get": {
                "tags": [
                    "Cadres"
                ],
                "summary": "Get a specific cadre",
                "description": "Display a specific cadre.",
                "operationId": "24e8059ad83b8cd811dd5c86e63b6557",
                "parameters": [
                    {
                        "name": "cadre",
                        "in": "path",
                        "description": "cadID of the cadre",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cadre found"
                    },
                    "404": {
                        "description": "Cadre not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Cadres"
                ],
                "summary": "Update an existing cadre",
                "description": "Update a specific cadre.",
                "operationId": "5021a6825b886b191249880d424ad930",
                "parameters": [
                    {
                        "name": "cadre",
                        "in": "path",
                        "description": "cadID of the cadre",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "qualification": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cadre updated successfully"
                    },
                    "404": {
                        "description": "Cadre not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Cadres"
                ],
                "summary": "Delete a cadre",
                "description": "Delete a specific cadre.",
                "operationId": "b6bf7e16343a6354d6c97a52f42326fa",
                "parameters": [
                    {
                        "name": "cadre",
                        "in": "path",
                        "description": "cadID of the cadre",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cadre deleted successfully"
                    },
                    "404": {
                        "description": "Cadre not found"
                    }
                }
            }
        },
        "/api/v1/children": {
            "get": {
                "tags": [
                    "Children"
                ],
                "summary": "Get paginated list of children",
                "description": "Display a listing of children resources",
                "operationId": "abfd365f803365f1d58541a7a89a31d9",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term to filter records",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Children retrieved successfully."
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Children"
                ],
                "summary": "Create a new child record",
                "description": "Store a newly created child resource",
                "operationId": "2dbf2a88620057466bc48e5ff6b81ed0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "gender",
                                    "dob",
                                    "address",
                                    "parentName",
                                    "parentContact"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ],
                                        "example": "male"
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2018-01-01"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "parentName": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "parentContact": {
                                        "type": "string",
                                        "example": "555-1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Child created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/children/{id}": {
            "get": {
                "tags": [
                    "Children"
                ],
                "summary": "Get child by ID",
                "description": "Display the specified child resource",
                "operationId": "08e159ed3ccd0a7e604febe3d7a09c31",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Child ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Child not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Children"
                ],
                "summary": "Update child record",
                "description": "Update the specified child resource",
                "operationId": "0a70fd57ea00075ea89231896a8481ef",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Child ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ],
                                        "example": "male"
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2018-01-01"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "parentName": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "parentContact": {
                                        "type": "string",
                                        "example": "555-1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Child updated successfully"
                    },
                    "404": {
                        "description": "Child not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Children"
                ],
                "summary": "Delete child record",
                "description": "Remove the specified child resource",
                "operationId": "117ea39981da1c397240a949cfa7642e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Child ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Child deleted successfully"
                    },
                    "404": {
                        "description": "Child not found"
                    }
                }
            }
        },
        "/api/v1/child-health-records": {
            "get": {
                "tags": [
                    "Child Health Records"
                ],
                "summary": "Get paginated list of child health records",
                "description": "Retrieve child health records with pagination.",
                "operationId": "6889bf6789826e16b37b008fc9251e78",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Child Health Records"
                ],
                "summary": "Create a new child health record",
                "operationId": "0494dba847400e3f777b06515a2dc8c6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "childID": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "healthWorkerID": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "checkupDate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-05-04"
                                    },
                                    "height": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 120.5
                                    },
                                    "weight": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 30.2
                                    },
                                    "vaccination": {
                                        "type": "string",
                                        "example": "Polio"
                                    },
                                    "diagnosis": {
                                        "type": "string",
                                        "example": "Healthy"
                                    },
                                    "treatment": {
                                        "type": "string",
                                        "example": "None"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Record created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/child-health-records/{recordID}": {
            "get": {
                "tags": [
                    "Child Health Records"
                ],
                "summary": "Get child health record by ID",
                "description": "Retrieve a specific child health record.",
                "operationId": "c2e2f96917f9a6afac81ea52faec4e61",
                "parameters": [
                    {
                        "name": "recordID",
                        "in": "path",
                        "description": "Record ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Record not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Child Health Records"
                ],
                "summary": "Delete a child health record",
                "operationId": "b4befd110683989ada8824bb1f3d6bc9",
                "parameters": [
                    {
                        "name": "recordID",
                        "in": "path",
                        "description": "Record ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record deleted successfully"
                    },
                    "404": {
                        "description": "Record not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/child-health-records/by-child/{childID}": {
            "get": {
                "tags": [
                    "Child Health Records"
                ],
                "summary": "Get all health records for a specific child",
                "operationId": "471fd2c26a25e0111f1de10d8f03be65",
                "parameters": [
                    {
                        "name": "childID",
                        "in": "path",
                        "description": "Child ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Records not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Child Health Records"
                ],
                "summary": "Update health records by child ID",
                "operationId": "b0619bfe4bcd608a9c9adb2038b7f143",
                "parameters": [
                    {
                        "name": "childID",
                        "in": "path",
                        "description": "Child ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "healthWorkerID": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "checkupDate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-05-04"
                                    },
                                    "height": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 120.5
                                    },
                                    "weight": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 30.2
                                    },
                                    "vaccination": {
                                        "type": "string",
                                        "example": "Polio"
                                    },
                                    "diagnosis": {
                                        "type": "string",
                                        "example": "Healthy"
                                    },
                                    "treatment": {
                                        "type": "string",
                                        "example": "None"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Record updated successfully"
                    },
                    "404": {
                        "description": "Record not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Child Health Records"
                ],
                "summary": "Add a health record for a specific child",
                "operationId": "2c954604580b9a548ea75edec5c5d25b",
                "parameters": [
                    {
                        "name": "childID",
                        "in": "path",
                        "description": "Child ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "healthWorkerID": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "checkupDate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-05-04"
                                    },
                                    "height": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 120.5
                                    },
                                    "weight": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 30.2
                                    },
                                    "vaccination": {
                                        "type": "string",
                                        "example": "Polio"
                                    },
                                    "diagnosis": {
                                        "type": "string",
                                        "example": "Healthy"
                                    },
                                    "treatment": {
                                        "type": "string",
                                        "example": "None"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Record added successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/child-health-records/by-health-worker/{hwID}": {
            "get": {
                "tags": [
                    "Child Health Records"
                ],
                "summary": "Get all health records assigned to a specific health worker",
                "operationId": "a948acfb0cb7bff0585e6ae6e026c2e5",
                "parameters": [
                    {
                        "name": "hwID",
                        "in": "path",
                        "description": "Health Worker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Records not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Child Health Records"
                ],
                "summary": "Update health records assigned to a specific health worker",
                "operationId": "8577aec846ec7993d7bd18d3ef056f47",
                "parameters": [
                    {
                        "name": "hwID",
                        "in": "path",
                        "description": "Health Worker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "childID": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "checkupDate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-05-04"
                                    },
                                    "height": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 120.5
                                    },
                                    "weight": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 30.2
                                    },
                                    "vaccination": {
                                        "type": "string",
                                        "example": "Polio"
                                    },
                                    "diagnosis": {
                                        "type": "string",
                                        "example": "Healthy"
                                    },
                                    "treatment": {
                                        "type": "string",
                                        "example": "None"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Record updated successfully"
                    },
                    "404": {
                        "description": "Record not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Child Health Records"
                ],
                "summary": "Add a health record assigned to a specific health worker",
                "operationId": "6dbe12d66b8c97778772b7f33b40e820",
                "parameters": [
                    {
                        "name": "hwID",
                        "in": "path",
                        "description": "Health Worker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "childID": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "checkupDate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-05-04"
                                    },
                                    "height": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 120.5
                                    },
                                    "weight": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 30.2
                                    },
                                    "vaccination": {
                                        "type": "string",
                                        "example": "Polio"
                                    },
                                    "diagnosis": {
                                        "type": "string",
                                        "example": "Healthy"
                                    },
                                    "treatment": {
                                        "type": "string",
                                        "example": "None"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Record added successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/health-restrictions": {
            "get": {
                "tags": [
                    "Health Restrictions"
                ],
                "summary": "Get paginated list of health restrictions",
                "description": "Retrieve health restrictions with pagination.",
                "operationId": "b684afafcfa469fc75519862883d138b",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/health-restrictions/{hrID}": {
            "get": {
                "tags": [
                    "Health Restrictions"
                ],
                "summary": "Get health restriction by ID",
                "description": "Retrieve a specific health restriction.",
                "operationId": "847e46789afacf75798175b43992844c",
                "parameters": [
                    {
                        "name": "hrID",
                        "in": "path",
                        "description": "Health Restriction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Restriction not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/health-restrictions/by-health-worker/{hwID}": {
            "put": {
                "tags": [
                    "Health Restrictions"
                ],
                "summary": "Update health restrictions assigned to a specific health worker",
                "operationId": "3201715235a62d73f6b7968c9ecf59fe",
                "parameters": [
                    {
                        "name": "hwID",
                        "in": "path",
                        "description": "Health Worker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "example": "No strenuous activity"
                                    },
                                    "severity": {
                                        "type": "string",
                                        "example": "Severe"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Restriction updated successfully"
                    },
                    "404": {
                        "description": "Restriction not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Health Restrictions"
                ],
                "summary": "Add a health restriction assigned to a specific health worker",
                "operationId": "c84d6a73dac95d55b863845f9c6064f3",
                "parameters": [
                    {
                        "name": "hwID",
                        "in": "path",
                        "description": "Health Worker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "recordID": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "No strenuous activity"
                                    },
                                    "severity": {
                                        "type": "string",
                                        "example": "Moderate"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Restriction added successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Health Restrictions"
                ],
                "summary": "Delete health restrictions assigned to a specific health worker",
                "operationId": "447c876c0cf427e4016d6e716d3d0223",
                "parameters": [
                    {
                        "name": "hwID",
                        "in": "path",
                        "description": "Health Worker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restriction deleted successfully"
                    },
                    "404": {
                        "description": "Restriction not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/health-restrictions/by-child/{childID}": {
            "post": {
                "tags": [
                    "Health Restrictions"
                ],
                "summary": "Add a health restriction assigned to a specific child",
                "operationId": "15fec3d1e29199d24c1c41acfe163bee",
                "parameters": [
                    {
                        "name": "childID",
                        "in": "path",
                        "description": "Child ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "recordID": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "No strenuous activity"
                                    },
                                    "severity": {
                                        "type": "string",
                                        "example": "Moderate"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Restriction added successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Health Restrictions"
                ],
                "summary": "Delete health restrictions assigned to a specific child",
                "operationId": "6f05f1b8e4994a43b4084851d3a79512",
                "parameters": [
                    {
                        "name": "childID",
                        "in": "path",
                        "description": "Child ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restriction deleted successfully"
                    },
                    "404": {
                        "description": "Restriction not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/healthworkers": {
            "get": {
                "tags": [
                    "Health Workers"
                ],
                "summary": "Get all health workers",
                "description": "Retrieve all health workers from the database",
                "operationId": "e6822edb986c4c947fc9143b245a72a5",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "No health workers found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Health Workers"
                ],
                "summary": "Create a new health worker",
                "description": "Stores a new health worker in the database",
                "operationId": "ab929805c16ceb95fabc6fb7e91aeaf5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "gender",
                                    "dob",
                                    "role",
                                    "telephone",
                                    "email",
                                    "address",
                                    "cadID"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "Male"
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "Nurse"
                                    },
                                    "telephone": {
                                        "type": "string",
                                        "example": "123-456-7890"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St, City, Country"
                                    },
                                    "cadID": {
                                        "type": "integer",
                                        "example": 21
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Health worker created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/healthworkers/{hwID}": {
            "get": {
                "tags": [
                    "Health Workers"
                ],
                "summary": "Get a single health worker",
                "description": "Retrieve a specific health worker by ID",
                "operationId": "463f47d294b7c3447e66bcf388c52ce2",
                "parameters": [
                    {
                        "name": "hwID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Health worker not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Health Workers"
                ],
                "summary": "Update an existing health worker",
                "description": "Modifies an existing health worker's details",
                "operationId": "d77f75cb7cc7057c42d73f6dc2a29e65",
                "parameters": [
                    {
                        "name": "hwID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "jane@example.com"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "Physician"
                                    },
                                    "telephone": {
                                        "type": "string",
                                        "example": "987-654-3210"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Health worker updated successfully"
                    },
                    "404": {
                        "description": "Health worker not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Health Workers"
                ],
                "summary": "Delete a health worker",
                "description": "Removes a health worker from the system",
                "operationId": "0e904538e4dc8d3f123f8040bcf85682",
                "parameters": [
                    {
                        "name": "hwID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Health worker deleted successfully"
                    },
                    "404": {
                        "description": "Health worker not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/healthworkers/{hwID}/assign": {
            "post": {
                "tags": [
                    "Health Workers"
                ],
                "summary": "Assign a health worker to a cadre",
                "description": "Assigns a health worker to a specific cadre",
                "operationId": "5c8366e03e006fbe1f45fc10e6ee0095",
                "parameters": [
                    {
                        "name": "hwID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "cadID"
                                ],
                                "properties": {
                                    "cadID": {
                                        "type": "integer",
                                        "example": 21
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Health worker assigned to cadre successfully"
                    },
                    "404": {
                        "description": "Health worker or cadre not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/healthworkers/{hwID}/update-profile": {
            "put": {
                "tags": [
                    "Health Workers"
                ],
                "summary": "Update health worker profile",
                "description": "Updates the profile of a health worker, including the image",
                "operationId": "f363319d24b30d3bb4cc244dac2e5e9b",
                "parameters": [
                    {
                        "name": "hwID",
                        "in": "path",
                        "description": "Health worker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Profile image (jpeg/png/gif)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Health worker updated successfully"
                    },
                    "404": {
                        "description": "Health worker not found"
                    },
                    "422": {
                        "description": "Invalid image format"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/healthworkers/search": {
            "get": {
                "tags": [
                    "Health Workers"
                ],
                "summary": "Search for health workers",
                "description": "Finds health workers based on a search term",
                "operationId": "293e1374e51159040d8d8cae5905baa7",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "John Doe"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results returned"
                    },
                    "404": {
                        "description": "No matching health workers found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/healthworkers/page/{page}": {
            "get": {
                "tags": [
                    "Health Workers"
                ],
                "summary": "Get paginated health workers",
                "description": "Retrieve health workers with pagination",
                "operationId": "6ae931220cf7c5396497e22dd1d4b771",
                "parameters": [
                    {
                        "name": "page",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 4
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of health workers"
                    },
                    "404": {
                        "description": "No health workers found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/healthworkers/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Login",
                "description": "Logs in a user and returns a token.",
                "operationId": "b3174da28a1df3aa66123f14382e34b0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "role"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "health_worker"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login Successful"
                    },
                    "401": {
                        "description": "Invalid Credentials"
                    },
                    "403": {
                        "description": "Role Mismatch"
                    },
                    "404": {
                        "description": "User Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    }
                }
            }
        },
        "/api/v1/project-assignments": {
            "get": {
                "tags": [
                    "ProjectAssignments"
                ],
                "summary": "Get all project assignments",
                "operationId": "cdb27375db295991e286cf3c783dae06",
                "responses": {
                    "200": {
                        "description": "List of project assignments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProjectAssignment"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No project assignments found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "ProjectAssignments"
                ],
                "summary": "Create a new project assignment",
                "operationId": "af05461bf8166cb00e9be524c8f451f5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectAssignment"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Project assignment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectAssignment"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Failed to create project assignment"
                    }
                }
            }
        },
        "/api/v1/project-assignments/{id}": {
            "get": {
                "tags": [
                    "ProjectAssignments"
                ],
                "summary": "Get a specific project assignment",
                "operationId": "fddd42fe538eac0edfa2f488b362c02c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project assignment found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectAssignment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project assignment not found"
                    },
                    "500": {
                        "description": "Failed to fetch project assignment"
                    }
                }
            },
            "put": {
                "tags": [
                    "ProjectAssignments"
                ],
                "summary": "Update a specific project assignment",
                "operationId": "8e951c8a5c04bb2b3acee748860dda69",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "hwID": {
                                        "type": "integer"
                                    },
                                    "prjID": {
                                        "type": "integer"
                                    },
                                    "assignedDate": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "endDate": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "role": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Project assignment updated"
                    },
                    "404": {
                        "description": "Project assignment not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Failed to update project assignment"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ProjectAssignments"
                ],
                "summary": "Delete a specific project assignment",
                "operationId": "506b93d3c4a54b3d621b45526bd7c6f7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project assignment deleted"
                    },
                    "404": {
                        "description": "Project assignment not found"
                    },
                    "500": {
                        "description": "Failed to delete project assignment"
                    }
                }
            }
        },
        "/api/v1/projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get all projects",
                "operationId": "f37e87d228a1da961dbe740509a572b0",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Project"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No projects found"
                    },
                    "500": {
                        "description": "Failed to fetch projects"
                    }
                }
            },
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Create a new project",
                "operationId": "6e5209e27969af6aef07c83d551d34b6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "cadID",
                                    "name",
                                    "description",
                                    "startDate",
                                    "status"
                                ],
                                "properties": {
                                    "cadID": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Project Alpha"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "This is a sample project."
                                    },
                                    "startDate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-05-01"
                                    },
                                    "endDate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-06-01"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "ongoing"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Project created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Failed to create project"
                    }
                }
            }
        },
        "/api/v1/projects/{id}": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get a single project",
                "operationId": "5f0441b4224dd6fad130c8ccdfb58f3a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found"
                    },
                    "500": {
                        "description": "Failed to fetch project"
                    }
                }
            },
            "put": {
                "tags": [
                    "Projects"
                ],
                "summary": "Update an existing project",
                "operationId": "77a635bc6d6b3545d139f4d2849f1e73",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cadID": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Project Name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "startDate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-06-01"
                                    },
                                    "endDate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-07-01"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "completed"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Project updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Failed to update project"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Projects"
                ],
                "summary": "Delete a project",
                "operationId": "a037bdd1a182724247044ac09e8c25e0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project deleted successfully"
                    },
                    "404": {
                        "description": "Project not found"
                    },
                    "500": {
                        "description": "Failed to delete project"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ProjectAssignment": {
                "title": "ProjectAssignment",
                "required": [
                    "hwID",
                    "prjID",
                    "assignedDate",
                    "role"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "hwID": {
                        "description": "Health worker ID",
                        "type": "integer",
                        "example": 1
                    },
                    "prjID": {
                        "description": "Project ID",
                        "type": "integer",
                        "example": 5
                    },
                    "assignedDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-05-01"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-08-01",
                        "nullable": true
                    },
                    "role": {
                        "type": "string",
                        "example": "Team Lead"
                    },
                    "healthWorker": {
                        "properties": {
                            "hwID": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "project": {
                        "properties": {
                            "prjID": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Project": {
                "title": "Project",
                "required": [
                    "cadID",
                    "name",
                    "description",
                    "startDate",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "cadID": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "status": {
                        "type": "string"
                    },
                    "cadre": {
                        "properties": {
                            "cadID": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Birth Properties",
            "description": "Endpoints for managing birth properties"
        },
        {
            "name": "Cadres",
            "description": "Operations related to healthcare cadres"
        },
        {
            "name": "Children",
            "description": "API/v1 Endpoints for Child Management"
        },
        {
            "name": "Child Health Records",
            "description": "Endpoints for managing child health records"
        },
        {
            "name": "Health Restrictions",
            "description": "Endpoints for managing health restrictions"
        },
        {
            "name": "Health Workers",
            "description": "Health Workers"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "ProjectAssignments",
            "description": "ProjectAssignments"
        },
        {
            "name": "Projects",
            "description": "Projects"
        }
    ]
}